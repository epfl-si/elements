@charset "utf-8";

// Add a beautiful underline to links
// Set $bg to false to text-decoration tweak completely.
// Set $hover to false to disable hover completely.
@mixin link-pretty($line: $link-color, $bg: $body-bg, $hover: gray('700'), $size: 1px) {
  text-decoration: none;
  // Underline via gradient background
  background-image: linear-gradient($line 0%, $line 100%);
  background-repeat: repeat-x;
  background-size: $size $size;
  background-position: 0 100%;

  @if ($bg) {
    @include link-pretty-text-shadow($bg);
  }

  // Tweak position + thickness for high res (1.75x and up) displays
  @media (min-resolution: 168dpi) {
    background-image: linear-gradient($line 0%, $line 100%);
    background-position: 0 100%;
  }

  // Style selected links (or else text-shadow makes it look crazy ugly)
  // Pseudo selectors must go separately, or they break each other
  &::selection {
    background-color: rgba(theme-color('primary'), 0.4);
    color: $body-color;
    text-shadow: none;
  }

  @if ($hover) {
    &:hover,
    &.hover {
      color: $link-hover-color;
      text-decoration: none;
      background-image: linear-gradient($hover 0%, $hover 100%);
    }
  }

  // Generate all background variants
  @each $color, $value in $theme-colors {
    .bg-#{$color} & {
      color: color-yiq($value);
      @include link-pretty-text-shadow($value);

      @if ($hover) {
        &:hover,
        &.hover {
          background-image: linear-gradient(gray('300') 0%, gray('300') 100%);
        }
      }
    }
  }
}

// Adds the text-shadow to make descendants prettier
@mixin link-pretty-text-shadow($color) {
  text-shadow:
    3px 0 $color,
    2px 0 $color,
    1px 0 $color,
    -1px 0 $color,
    -2px 0 $color,
    -3px 0 $color;
}

@mixin text-emphasis-variant-decoration($parent, $color) {
  a#{$parent} {
    @include hover-focus {
      text-decoration-color: $color;
    }
  }
}

// Trapeze link
@mixin trapeze-vertical($color, $size) {
  &:before {
    top: 0;
    right: 100%;
    width: 0;
    height: 100%;
    border-right-width: 0;
    border-right-color: $color;
    border-left-width: 0;
  }

  &:hover,
  &:focus {
    transform: translateX($size);

    &:before {
      border-right-width: $size;
    }
  }
}

@mixin trapeze-horizontal($color, $size) {
  &:before {
    top: 100%;
    left: 0;
    width: 100%;
    height: 0;
    border-bottom-width: 0;
    border-top-width: 0;
    border-top-color: $color;
  }

  &:hover,
  &:focus {
    transform: translateY(-$size);

    &:before {
      border-top-width: $size;
    }
  }
}

@mixin link-trapeze($position: vertical, $color: gray('200'), $size: $trapeze-height) {
  position: relative;
  z-index: $zindex-0;
  transition: transform $trapeze-animation-duration;

  &:before {
    content: '';
    display: block;
    position: absolute;
    z-index: $zindex-background;
    border: $size solid transparent;
    transition: border $trapeze-animation-duration;
  }

  @if $position == vertical {
    @include trapeze-vertical($color, $size);
  } @else if $position == horizontal {
    @include trapeze-horizontal($color, $size);
  }
}

// trapeze with span
@mixin trapeze-span-horizontal-container($size: $trapeze-height) {
  display: block;
  position: relative;
  z-index: $zindex-1;
  transition:
    margin $trapeze-animation-duration,
    padding $trapeze-animation-duration;

  &:hover,
  &:focus {
    @include trapeze-span-horizontal-container-active($size);
  }
}

@mixin trapeze-span-horizontal-container-active($size: $trapeze-height) {
  margin-top: -$size !important;
  padding-bottom: $size;

  .trapeze-horizontal {
    border-top-width: $size;
  }
}

@mixin trapeze-span-vertical-container($size: $trapeze-height) {
  display: block;
  position: relative;
  z-index: $zindex-1;
  transition:
    margin $trapeze-animation-duration,
    padding $trapeze-animation-duration;

  &:hover,
  &:focus {
    @include trapeze-span-vertical-container-active($size);
  }
}

@mixin trapeze-span-vertical-container-active($size: $trapeze-height) {
  padding-left: $trapeze-height;
  margin-right: $trapeze-height * -1;

  .trapeze-vertical {
    border-right-width: $trapeze-height;
  }
}

@mixin trapeze-span-vertical($color: gray('200'), $size: $trapeze-height) {
  display: block;
  position: absolute;
  z-index: $zindex-0;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  margin-right: $size * -1;
  border-right: 0 solid $color;
  border-top: $size solid transparent;
  border-bottom: $size solid transparent;
  transition: border $trapeze-animation-duration;
}

@mixin trapeze-span-horizontal($color: gray('200'), $size: $trapeze-height) {
  display: block;
  position: absolute;
  z-index: $zindex-0;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 0;
  margin-top: $trapeze-height * -1;
  border-top: 0 solid $gray-200;
  border-left: $trapeze-height solid transparent;
  border-right: $trapeze-height solid transparent;
  transition: border $trapeze-animation-duration;
}
