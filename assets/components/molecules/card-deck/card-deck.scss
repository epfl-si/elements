@charset 'utf-8';

.card-deck {
  position: relative;
  margin-left: $spacer * -0.5;
  margin-right: $spacer * -0.5;
  flex-wrap: wrap;

  @include media-breakpoint-up(lg) {
    > .card {
      z-index: $zindex-1;
      margin: $spacer * 0.5;

      // only one card is present
      &:first-child:last-child {
        flex: 0 0 33%;
        margin-left: auto;
        margin-right: auto;
      }

      // two cards are present
      &:nth-last-child(n + 2) {
        flex: 0 0 33%;
        margin-left: auto;
      }

      &:nth-last-child(n + 2) ~ * {
        flex: 0 0 33%;
        margin-right: auto;
      }

      // three or more cards are present
      &:nth-last-child(n + 3),
      &:nth-last-child(n + 3) ~ * {
        flex: 1 1 30%;
        margin: $spacer * 0.5;
      }
    }

    &.card-deck-line {

      &:before {
        content: ' ';
        position: absolute;
        top: 50%;
        left: 5%;
        width: 30%;
        z-index: $zindex-0;
        border-bottom: 1px solid $gray-100;

        .bg-gray-100 & {
          border-bottom-color: $gray-300;
        }
      }

      &:after {
        content: ' ';
        position: absolute;
        top: 50%;
        right: 5%;
        width: 30%;
        z-index: $zindex-0;
        border-bottom: 1px solid $gray-100;

        .bg-gray-100 & {
          border-bottom-color: $gray-300;
        }
      }

      /*
      * for plain cards, we add pseudo elements, allowing the lines not to touch the cards
      */
      > div.card {
        &:first-child:last-child {
          position: relative;

          &:before {
            content: ' ';
            display: block;
            position: absolute;
            top: 0;
            left: calc(#{$spacer * -1} - 1px);
            width: $spacer;
            height: 100%;
            background: white;

            .bg-gray-100 & {
              background-color: $gray-100;
            }
          }

          &:after {
            content: ' ';
            display: block;
            position: absolute;
            top: 0;
            right: calc(#{$spacer * -1} - 1px);
            width: $spacer;
            height: 100%;
            background: white;

            .bg-gray-100 & {
              background-color: $gray-100;
            }
          }
        }

        // two cards are present
        &:nth-last-child(n + 2) {
          &:before {
            content: ' ';
            display: block;
            position: absolute;
            top: 0;
            left: calc(#{$spacer * -1} - 1px);
            width: $spacer;
            height: 100%;
            background: white;

            .bg-gray-100 & {
              background-color: $gray-100;
            }
          }
        }

        &:nth-last-child(n + 2) ~ * {
          &:after {
            content: ' ';
            display: block;
            position: absolute;
            top: 0;
            right: calc(#{$spacer * -1} - 1px);
            width: $spacer;
            height: 100%;
            background: white;

            .bg-gray-100 & {
              background-color: $gray-100;
            }
          }
        }

        // three or more cards are present
        &:nth-last-child(n + 3),
        &:nth-last-child(n + 3) ~ * {

          &:before,
          &:after {
            content: none;
          }

        }
      }

      /*
      * Styles for card-links. this is tricky because we already use before and after pseudo elements
      * on card-links. So to avoid the line touching the card, we add a border
      */
      > a.card {

        // only one card is present
        &:first-child:last-child {
          flex: 0 0 calc(33% + #{$spacer * 1.5});
          border-left: 1rem solid white;
          border-right: 1rem solid white;
          .bg-gray-100 & {
            border-right-color: $gray-100;
            border-left-color: $gray-100;
          }
        }

        // two cards are present
        &:nth-last-child(n + 2) {
          flex: 0 0 calc(33% + #{$spacer * 1.5});
          border-left: 1rem solid white;
          .bg-gray-100 & {
            border-left-color: $gray-100;
          }
        }

        &:nth-last-child(n + 2) ~ * {
          flex: 0 0 calc(33% + #{$spacer * 1.5});
          border-right: 1rem solid white;
          .bg-gray-100 & {
            border-right-color: $gray-100;
          }
        }

        // three or more cards are present
        &:nth-last-child(n + 3),
        &:nth-last-child(n + 3) ~ * {
          flex: 1 1 30%;
          border: none;
        }
      }
    }
  }
}
