@charset "utf-8";
@use 'sass:math';

$collapse-chevron-active: str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='#{theme-color('primary')}' viewBox='0 0 6 3'%3E%3Cpath d='M3 3 6 0 0 0z'/%3E%3C/svg%3E"), "#", "%23");
$collapse-chevron: str-replace(url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='#{$gray-600}' viewBox='0 0 6 3'%3E%3Cpath d='M3 0 6 3 0 3z'/%3E%3C/svg%3E"), "#", "%23");
$collapse-chevron-size: 12px;

@mixin collapse-btn() {
  $icon-size: 1rem;
  $icon-size-half: math.div($icon-size, 2);
  $icon-thickness: 2px;
  $icon-thickness-half: math.div($icon-thickness, 2);

  display: block;
  position: relative;
  width: 100%;
  margin-bottom: 0;
  padding: 0.9rem #{ $collapse-chevron-size + 4px } 0.9rem 0;
  border-top: 1px solid $gray-300;
  font-size: 1.125rem;
  text-align: left;
  font-weight: 800;
  &:hover { cursor: pointer; }

  &:after {
    content: $collapse-chevron;
    position: absolute;
    top: $collapse-chevron-size;
    right: 0;
    width: $collapse-chevron-size;
    height: math.div($collapse-chevron-size, 2);
    border: 0;
  }

  &.collapsed:after {
    content: $collapse-chevron-active;
  }
}

.collapse-title {
  position: relative;
  padding: 0;
  background: none;
  border: none;
  color: $black;
  transition: box-shadow 0.25s, color 0.15s;

  &:before {
    content: ' ';
      position: absolute;
      top: 0;
      left: $spacer * -0.3;
      width: $spacer * 0.6;
      height: 100%;
      background: $primary;
      opacity: 0;
      transition:
        opacity 0.3s,
        transform 0.2s;
      z-index: $zindex-background;
  }

  &:focus {
    outline: none;
    position: relative;

    &:before {
      transform: translateX($spacer * -0.7);
      opacity: 1;
    }
  }

  &.collapse-title-desktop {
    @include collapse-btn();

    &:hover,
    &:focus,
    &:active {
      color: $red;
    }
  }

  @include media-breakpoint-down(sm) {
    @include collapse-btn();
  }

  p {
    margin-bottom: 0.25em;
  }

  *:last-child {
    margin-bottom: 0;
  }
}

button.collapse-title {
  &:focus,
  &:focus-visible {
    outline: 0 !important;
  }
}

.collapse-item {
  &:after {
    content: "";
    display: block;
    padding-top: 2rem;
  }

  *:last-child {
    margin-bottom: 0;
  }

  &:not(.collapse-item-desktop) {
    @include media-breakpoint-up(md) {
      display: block !important;
      height: auto !important;
      min-height: 1px !important;
      overflow: visible !important;
      transition: none !important;
    }
  }
}

header.collapse-title {
  font-size: inherit;

  p {
    font-size: 1rem;
  }

  @include media-breakpoint-up(md) {
    p {
      font-size: 1.125rem;
    }
  }

  @include media-breakpoint-up(lg) {
    p.title {
      font-size: 1.25rem;
    }
  }
}

header.collapse-title + .collapse-item {
  &:before {
    content: "";
    display: block;
    padding-top: 0.5rem;
  }
}

.collapse-group {
  border-bottom: 1px solid $gray-300;
  margin-bottom: $spacer * 2;
}

// Link collapse

.link-collapse {
  display: inline-flex;
  align-items: baseline;
  text-decoration: none;

  &:after {
    content: '';
    display: inline-block;
    width: $collapse-chevron-size;
    height: $collapse-chevron-size;
    margin-left: math.div($collapse-chevron-size, 2);
    background: $collapse-chevron no-repeat center center;
    background-size: contain;
  }

  &.collapsed {
    &:after {
      background-image: $collapse-chevron-active;
    }
  }
}

// Collapse helpers
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .collapse#{$infix}-show { display: block !important; }
  }
}

// Collapse dropdown (shadow and top arrow)
$collapse-drop-margin: ($grid-gutter-width * 0.3);

.collapse-drop-toggle {
  position: relative;
  margin-bottom: $collapse-drop-margin;

  &:not(.collapsed) {
    &,
    &:hover {
      background: $body-color;
      color: $body-bg;
    }

    &:after {
      content: '';
      position: absolute;
      top: calc(100% + #{$collapse-drop-margin});
      left: 50%;
      width: 0;
      height: 0;
      border-left: ($collapse-drop-margin * 0.75) solid transparent;
      border-bottom: ($collapse-drop-margin * 0.75) solid $border-color;
      border-right: ($collapse-drop-margin * 0.75) solid transparent;
      transform: translateX(-50%);
    }
  }
}

.collapse-drop {
  &.show,
  &.collapsing {
    position: relative;
    margin-top: math.div($collapse-drop-margin, 2);
    border-top: ($border-width * 2) solid $border-color;

    > form {
      box-shadow: $dropdown-box-shadow;
      border-bottom: $border-width solid $border-color;
    }
  }
}

.collapse-partial:not(.show) {
  display: block !important;
  position: relative;
  height: 7rem;
  overflow: hidden;
  margin-bottom: 1rem;
}

.collapse-partial > * {
  margin: 0;
}

.collapse-partial:not(.show):after {
  content: ' ';
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 40%;
  background: linear-gradient(0deg,white 0, rgba(255,255,255,0.9) 15%, transparent)
}

.collapse-partial + button .icon {
  top: 0.2em;
}

.collapse-partial.show + button .icon {
  transform: rotate(180deg);
}

.collapse-container {
  border-top: 1px solid #c1c1c1;
  border-bottom: 1px solid #c1c1c1;
  margin-bottom: ($spacer * 3);

  .collapse-title {
    border-top: 0;
  }

  & + .collapse-container {
    border-top: 0;
    margin-top: -($spacer * 3);
  }
}

// helper classes to define partial collapse defaut height
@for $i from 0 to 10 {
  .collapse-partial-#{$i}:not(.show) {
    height: #{$i * 2}rem;
  }
}
